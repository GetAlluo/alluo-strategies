import { formatUnits, parseEther, parseUnits } from "@ethersproject/units";
import { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { expect } from "chai";
import { BigNumber, BigNumberish, BytesLike, constants, Wallet } from "ethers";
import { defaultAbiCoder } from "ethers/lib/utils";
import { ethers, network, upgrades } from "hardhat";
import { before } from "mocha";
import { CurveConvexStrategy, CurveConvexStrategyTest, CurveConvexStrategyV2, CurveConvexStrategyV2Native, IERC20, IERC20Metadata, IExchange, IWrappedEther, StrategyHandler, IVoteExecutorMaster } from "../typechain";
import { IExchangeInterface } from "../typechain/IExchange";
let signers: SignerWithAddress[]
let gnosis: SignerWithAddress


async function getImpersonatedSigner(address: string): Promise<SignerWithAddress> {
    await ethers.provider.send(
        'hardhat_impersonateAccount',
        [address]
    );

    await signers[0].sendTransaction({
        to: address,
        value: parseEther("1")

    });

    return await ethers.getSigner(address);
}


describe("Test L1 Contract", function () {
    let voteExecutorMaster: IVoteExecutorMaster;
    let strategyHandler: StrategyHandler;
    let weth: IERC20Metadata

    beforeEach(async () => {
        await network.provider.request({
            method: "hardhat_reset",
            params: [{
                chainId: 1,
                forking: {
                    chainId: 1,
                    enabled: true,
                    jsonRpcUrl: process.env.MAINNET_FORKING_URL as string,
                    //you can fork from last block by commenting next line
                    blockNumber: 16666958
                },
            },],
        });


        weth = await ethers.getContractAt("IERC20Metadata", "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2");
        signers = await ethers.getSigners();

        gnosis = await getImpersonatedSigner("0x1F020A4943EB57cd3b2213A66b355CB662Ea43C3")
        voteExecutorMaster = await ethers.getContractAt("IVoteExecutorMaster", "0x82e568C482dF2C833dab0D38DeB9fb01777A9e89");
        strategyHandler = await ethers.getContractAt("StrategyHandler", "0x385AB598E7DBF09951ba097741d2Fa573bDe94A5");
    });
    describe("Full workflow", function () {
        it("Should work", async function () {
            let wethContract = await ethers.getContractAt("contracts/interfaces/IWrappedEther.sol:IWrappedEther", "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2");
            let usdc = await ethers.getContractAt("IERC20Metadata", "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48");
            let wbtc = await ethers.getContractAt("IERC20Metadata", "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599");

            // Upgrade strategy handler
            let newStrategyHandler = await (await ethers.getContractFactory("StrategyHandler")).deploy();
            await strategyHandler.connect(gnosis).changeUpgradeStatus(true);
            await strategyHandler.connect(gnosis).upgradeTo(newStrategyHandler.address)

            // Transfer funds 
            // await wethContract.connect(gnosis).deposit({ value: ethers.utils.parseEther("3.1") })
            // await wethContract.connect(gnosis).transfer(voteExecutorMaster.address, ethers.utils.parseEther("3.1"))
            console.log("BEFORE!")
            console.log(await weth.balanceOf(voteExecutorMaster.address))
            console.log(await usdc.balanceOf(voteExecutorMaster.address))
            console.log(await wbtc.balanceOf(voteExecutorMaster.address))
            // set minsigns to 0
            await voteExecutorMaster.connect(gnosis).setMinSigns(0)

            // Execute data and then execute deposits through gnosis
            await voteExecutorMaster.submitData("0x0778e02f3c71883d504a37a8e74ebaf506e42ad1b6d3747b22a68a56972e196700000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000063f217bb000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002c00000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004a000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000006a0000000000000000000000000000000000000000000000000000000000000074000000000000000000000000000000000000000000000000000000000000007e000000000000000000000000000000000000000000000000000000000000008e000000000000000000000000000000000000000000000000000000000000009eb00000000000000000000000000000000000000000000000000000000000024720000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000029ea00000000000000000000000000000000000000000000000000000000000002d90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002bc000000000000000000000000000000000000000000000000016345786a53af20000000000000000000000000000000000000000000000000000000000000000a4962416c6c756f455552000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002260000000000000000000000000000000000000000000000000163457867a89614000000000000000000000000000000000000000000000000000000000000000a4962416c6c756fa0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002bc000000000000000000000000000000000000000000000000016345786a53af20000000000000000000000000000000000000000000000000000000000000000a4962416c6c756f555344000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001900000000000000000000000000000000000000000000000000163457864f3b4bc000000000000000000000000000000000000000000000000000000000000000a4962416c6c756f42544300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000020fffffffffffffffffffffffffffffffffffffffffffff5c7e29d1e149fed0f80")
            await voteExecutorMaster.executeSpecificData(7)
            await voteExecutorMaster.connect(gnosis).executeDeposits();

            console.log("AFTER!!")
            console.log(await weth.balanceOf(voteExecutorMaster.address))
            console.log(await usdc.balanceOf(voteExecutorMaster.address))
            console.log(await wbtc.balanceOf(voteExecutorMaster.address))
        })
    })

})
